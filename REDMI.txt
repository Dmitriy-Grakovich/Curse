# Фрагмент MoneyFragment объект контроллера, которому активность может доверить выполнение операций
# UI - фрагмент управляет пользовательским интерфейсом
Применение UI-фрагментов позволяет разделить пользовательский интерфейс
вашего приложения на структурные блоки
Чтобы стать хостом для UI-фрагмента, активность должна:
* определить место представления фрагмента в своем макете;
* управлять жизненным циклом экземпляра фрагмента

# Создаем модель Money наполняем ее полями + конструктор без параметров.
# В представление CurseActivity вкладываем представление фрагмента.
# Представление MoneyFragment будет отображать информацию, содержащуюся
  в экземпляре Money.
# Для хранения массива-денег будет использоваться singleton класс
# Создаем абстрактный класс для Activity - уход от дублирования кода

# Создаем контроллер для списка валют Activity
# Делаем активность списка активностью лаунчера

# Создаем представление для списка валют MoneyListFragment
* используем виджет RecyclerView
* Создаем внутренниу класс ViewHolder он удерживает объект View
* Создаем внутренниу класс Adapter - создание необходимых объектов ViewHolder;
                                   - связывание ViewHolder с данными из уровня модели

* Создаем внутренниу класс "второй поток" AsyncTask для подключение к стороннему ресурсу,
 скачивание информации, парсим JSON, заполняем список полученными моделями. Выводим на экран.







